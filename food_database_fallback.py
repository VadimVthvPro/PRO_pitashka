"""
Fallback база данных продуктов для PROpitashka
Используется, когда AI не может корректно распознать еду
"""

# Базовая база данных продуктов (КБЖУ на 100г)
FOOD_DATABASE = {
    # Молочные продукты
    "молоко": {"cal": 60, "b": 3.2, "g": 3.5, "u": 4.8},
    "кефир": {"cal": 53, "b": 3.0, "g": 2.5, "u": 4.1},
    "творог": {"cal": 169, "b": 16.7, "g": 9.0, "u": 2.0},
    "сыр": {"cal": 364, "b": 26.8, "g": 26.5, "u": 0.0},
    "йогурт": {"cal": 68, "b": 5.0, "g": 1.5, "u": 8.5},
    
    # Мясо и птица
    "курица": {"cal": 190, "b": 18.2, "g": 13.6, "u": 0.0},
    "говядина": {"cal": 218, "b": 18.6, "g": 15.0, "u": 0.0},
    "свинина": {"cal": 242, "b": 16.0, "g": 21.0, "u": 0.0},
    "индейка": {"cal": 189, "b": 19.5, "g": 12.0, "u": 0.0},
    "колбаса": {"cal": 301, "b": 12.0, "g": 27.5, "u": 1.5},
    
    # Рыба
    "лосось": {"cal": 208, "b": 20.0, "g": 13.0, "u": 0.0},
    "тунец": {"cal": 96, "b": 23.0, "g": 0.6, "u": 0.0},
    "треска": {"cal": 78, "b": 17.7, "g": 0.7, "u": 0.0},
    
    # Крупы и каши
    "рис": {"cal": 344, "b": 6.7, "g": 0.7, "u": 78.0},
    "гречка": {"cal": 343, "b": 12.6, "g": 3.3, "u": 68.0},
    "овсянка": {"cal": 342, "b": 12.3, "g": 6.1, "u": 59.5},
    "макароны": {"cal": 344, "b": 10.4, "g": 1.1, "u": 71.5},
    
    # Хлеб и выпечка
    "хлеб": {"cal": 266, "b": 7.5, "g": 2.9, "u": 50.1},
    "булка": {"cal": 339, "b": 7.7, "g": 7.5, "u": 60.0},
    "печенье": {"cal": 417, "b": 7.5, "g": 11.8, "u": 74.4},
    
    # Овощи
    "картофель": {"cal": 77, "b": 2.0, "g": 0.4, "u": 16.3},
    "помидор": {"cal": 20, "b": 0.6, "g": 0.2, "u": 4.2},
    "огурец": {"cal": 15, "b": 0.8, "g": 0.1, "u": 2.8},
    "капуста": {"cal": 27, "b": 1.8, "g": 0.1, "u": 4.7},
    "морковь": {"cal": 32, "b": 0.9, "g": 0.1, "u": 6.9},
    "лук": {"cal": 41, "b": 1.4, "g": 0.0, "u": 10.4},
    "перец": {"cal": 27, "b": 1.3, "g": 0.0, "u": 5.3},
    
    # Фрукты
    "яблоко": {"cal": 47, "b": 0.4, "g": 0.4, "u": 9.8},
    "банан": {"cal": 96, "b": 1.5, "g": 0.2, "u": 21.0},
    "апельсин": {"cal": 43, "b": 0.9, "g": 0.2, "u": 8.1},
    "груша": {"cal": 42, "b": 0.4, "g": 0.3, "u": 10.9},
    "виноград": {"cal": 65, "b": 0.6, "g": 0.2, "u": 15.4},
    
    # Яйца
    "яйцо": {"cal": 157, "b": 12.7, "g": 11.5, "u": 0.7},
    
    # Орехи
    "орехи": {"cal": 607, "b": 16.2, "g": 60.8, "u": 11.1},
    "миндаль": {"cal": 645, "b": 18.6, "g": 57.7, "u": 16.2},
    
    # Готовые блюда (приблизительные значения)
    "борщ": {"cal": 49, "b": 2.5, "g": 2.3, "u": 5.1},
    "суп": {"cal": 39, "b": 2.0, "g": 1.5, "u": 5.0},
    "салат": {"cal": 53, "b": 1.2, "g": 3.0, "u": 5.0},
    "пицца": {"cal": 266, "b": 11.0, "g": 10.5, "u": 33.0},
    "бургер": {"cal": 295, "b": 17.0, "g": 14.0, "u": 24.0},
    "каша": {"cal": 88, "b": 3.2, "g": 2.3, "u": 14.4},
}

# Синонимы для лучшего распознавания
FOOD_SYNONYMS = {
    # Молочка
    "milk": "молоко",
    "kefir": "кефир",
    "cottage cheese": "творог",
    "cheese": "сыр",
    "yogurt": "йогурт",
    
    # Мясо
    "chicken": "курица",
    "beef": "говядина",
    "pork": "свинина",
    "turkey": "индейка",
    "sausage": "колбаса",
    
    # Рыба
    "salmon": "лосось",
    "tuna": "тунец",
    "cod": "треска",
    
    # Крупы
    "rice": "рис",
    "buckwheat": "гречка",
    "oatmeal": "овсянка",
    "pasta": "макароны",
    
    # Хлеб
    "bread": "хлеб",
    "bun": "булка",
    "cookie": "печенье",
    "cookies": "печенье",
    
    # Овощи
    "potato": "картофель",
    "tomato": "помидор",
    "cucumber": "огурец",
    "cabbage": "капуста",
    "carrot": "морковь",
    "onion": "лук",
    "pepper": "перец",
    
    # Фрукты
    "apple": "яблоко",
    "banana": "банан",
    "orange": "апельсин",
    "pear": "груша",
    "grape": "виноград",
    "grapes": "виноград",
    
    # Яйца
    "egg": "яйцо",
    "eggs": "яйцо",
    
    # Орехи
    "nuts": "орехи",
    "almond": "миндаль",
    "almonds": "миндаль",
    
    # Блюда
    "borsch": "борщ",
    "soup": "суп",
    "salad": "салат",
    "pizza": "пицца",
    "burger": "бургер",
    "porridge": "каша",
}


def find_food_in_database(food_name: str):
    """
    Ищет продукт в базе данных по имени.
    Поддерживает поиск с учетом синонимов и регистра.
    
    Args:
        food_name: Название продукта
        
    Returns:
        dict: КБЖУ продукта или None, если не найдено
    """
    # Приводим к нижнему регистру
    food_name_lower = food_name.lower().strip()
    
    # Прямой поиск
    if food_name_lower in FOOD_DATABASE:
        return FOOD_DATABASE[food_name_lower]
    
    # Поиск по синонимам
    if food_name_lower in FOOD_SYNONYMS:
        return FOOD_DATABASE[FOOD_SYNONYMS[food_name_lower]]
    
    # Поиск по частичному совпадению
    for key in FOOD_DATABASE.keys():
        if food_name_lower in key or key in food_name_lower:
            return FOOD_DATABASE[key]
    
    return None


def calculate_nutrition(food_name: str, weight_grams: float):
    """
    Рассчитывает КБЖУ для указанного количества продукта.
    
    Args:
        food_name: Название продукта
        weight_grams: Вес в граммах
        
    Returns:
        dict: Рассчитанные КБЖУ или None
    """
    nutrition = find_food_in_database(food_name)
    
    if not nutrition:
        return None
    
    # Пересчитываем на указанный вес
    multiplier = weight_grams / 100
    
    return {
        "name": food_name,
        "weight": weight_grams,
        "cal": round(nutrition["cal"] * multiplier, 2),
        "b": round(nutrition["b"] * multiplier, 2),
        "g": round(nutrition["g"] * multiplier, 2),
        "u": round(nutrition["u"] * multiplier, 2),
    }


# Пример использования:
if __name__ == "__main__":
    # Тест поиска
    print(find_food_in_database("chicken"))  # Найдет через синоним
    print(find_food_in_database("яблоко"))   # Прямой поиск
    
    # Тест расчета
    result = calculate_nutrition("банан", 150)
    print(result)
    # Вывод: {'name': 'банан', 'weight': 150, 'cal': 144.0, 'b': 2.25, 'g': 0.3, 'u': 31.5}








